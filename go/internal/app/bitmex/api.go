package bitmex

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code
import (
	"bytes"
	"encoding/json"
	"net/http"
	"time"
)

func request(method string, url string, data *interface{}, body bytes.Buffer) (err error) {
	client := &http.Client{Timeout: time.Second * 10}
	var req *http.Request
	if len(body.Bytes()) > 0 {
		req, err = http.NewRequest(method, url, &body)
		req.Header.Add("Content-Type", http.DetectContentType(body.Bytes()))
	} else {
		req, err = http.NewRequest(method, url, nil)
	}
	// TODO: Implement headers for auth or extras
	res, err := client.Do(req)
	if err != nil {
		return err
	}
	defer res.Body.Close()
	err = json.NewDecoder(res.Body).Decode(data)
	if err != nil {
		return err
	}
	return nil
}

// PublicGetAnnouncement method for https://www.bitmex.com/api/v1/announcement
func (c *BitmexExchange) PublicGetAnnouncement() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/announcement"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetAnnouncementUrgent method for https://www.bitmex.com/api/v1/announcement/urgent
func (c *BitmexExchange) PublicGetAnnouncementUrgent() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/announcement/urgent"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetFunding method for https://www.bitmex.com/api/v1/funding
func (c *BitmexExchange) PublicGetFunding() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/funding"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrument method for https://www.bitmex.com/api/v1/instrument
func (c *BitmexExchange) PublicGetInstrument() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrumentActive method for https://www.bitmex.com/api/v1/instrument/active
func (c *BitmexExchange) PublicGetInstrumentActive() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument/active"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrumentActiveAndIndices method for https://www.bitmex.com/api/v1/instrument/activeAndIndices
func (c *BitmexExchange) PublicGetInstrumentActiveAndIndices() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument/activeAndIndices"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrumentActiveIntervals method for https://www.bitmex.com/api/v1/instrument/activeIntervals
func (c *BitmexExchange) PublicGetInstrumentActiveIntervals() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument/activeIntervals"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrumentCompositeIndex method for https://www.bitmex.com/api/v1/instrument/compositeIndex
func (c *BitmexExchange) PublicGetInstrumentCompositeIndex() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument/compositeIndex"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInstrumentIndices method for https://www.bitmex.com/api/v1/instrument/indices
func (c *BitmexExchange) PublicGetInstrumentIndices() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/instrument/indices"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetInsurance method for https://www.bitmex.com/api/v1/insurance
func (c *BitmexExchange) PublicGetInsurance() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/insurance"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetLeaderboard method for https://www.bitmex.com/api/v1/leaderboard
func (c *BitmexExchange) PublicGetLeaderboard() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/leaderboard"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetLiquidation method for https://www.bitmex.com/api/v1/liquidation
func (c *BitmexExchange) PublicGetLiquidation() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/liquidation"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetOrderBook method for https://www.bitmex.com/api/v1/orderBook
func (c *BitmexExchange) PublicGetOrderBook() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/orderBook"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetOrderBookL2 method for https://www.bitmex.com/api/v1/orderBook/L2
func (c *BitmexExchange) PublicGetOrderBookL2() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/orderBook/L2"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetQuote method for https://www.bitmex.com/api/v1/quote
func (c *BitmexExchange) PublicGetQuote() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/quote"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetQuoteBucketed method for https://www.bitmex.com/api/v1/quote/bucketed
func (c *BitmexExchange) PublicGetQuoteBucketed() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/quote/bucketed"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetSchema method for https://www.bitmex.com/api/v1/schema
func (c *BitmexExchange) PublicGetSchema() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/schema"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetSchemaWebsocketHelp method for https://www.bitmex.com/api/v1/schema/websocketHelp
func (c *BitmexExchange) PublicGetSchemaWebsocketHelp() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/schema/websocketHelp"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetSettlement method for https://www.bitmex.com/api/v1/settlement
func (c *BitmexExchange) PublicGetSettlement() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/settlement"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetStats method for https://www.bitmex.com/api/v1/stats
func (c *BitmexExchange) PublicGetStats() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/stats"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetStatsHistory method for https://www.bitmex.com/api/v1/stats/history
func (c *BitmexExchange) PublicGetStatsHistory() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/stats/history"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetTrade method for https://www.bitmex.com/api/v1/trade
func (c *BitmexExchange) PublicGetTrade() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/trade"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PublicGetTradeBucketed method for https://www.bitmex.com/api/v1/trade/bucketed
func (c *BitmexExchange) PublicGetTradeBucketed() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/trade/bucketed"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetApiKey method for https://www.bitmex.com/api/v1/apiKey
func (c *BitmexExchange) PrivateGetApiKey() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/apiKey"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetChat method for https://www.bitmex.com/api/v1/chat
func (c *BitmexExchange) PrivateGetChat() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/chat"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetChatChannels method for https://www.bitmex.com/api/v1/chat/channels
func (c *BitmexExchange) PrivateGetChatChannels() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/chat/channels"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetChatConnected method for https://www.bitmex.com/api/v1/chat/connected
func (c *BitmexExchange) PrivateGetChatConnected() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/chat/connected"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetExecution method for https://www.bitmex.com/api/v1/execution
func (c *BitmexExchange) PrivateGetExecution() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/execution"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetExecutionTradeHistory method for https://www.bitmex.com/api/v1/execution/tradeHistory
func (c *BitmexExchange) PrivateGetExecutionTradeHistory() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/execution/tradeHistory"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetNotification method for https://www.bitmex.com/api/v1/notification
func (c *BitmexExchange) PrivateGetNotification() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/notification"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetOrder method for https://www.bitmex.com/api/v1/order
func (c *BitmexExchange) PrivateGetOrder() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetPosition method for https://www.bitmex.com/api/v1/position
func (c *BitmexExchange) PrivateGetPosition() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/position"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUser method for https://www.bitmex.com/api/v1/user
func (c *BitmexExchange) PrivateGetUser() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserAffiliateStatus method for https://www.bitmex.com/api/v1/user/affiliateStatus
func (c *BitmexExchange) PrivateGetUserAffiliateStatus() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/affiliateStatus"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserCheckReferralCode method for https://www.bitmex.com/api/v1/user/checkReferralCode
func (c *BitmexExchange) PrivateGetUserCheckReferralCode() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/checkReferralCode"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserCommission method for https://www.bitmex.com/api/v1/user/commission
func (c *BitmexExchange) PrivateGetUserCommission() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/commission"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserDepositAddress method for https://www.bitmex.com/api/v1/user/depositAddress
func (c *BitmexExchange) PrivateGetUserDepositAddress() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/depositAddress"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserMargin method for https://www.bitmex.com/api/v1/user/margin
func (c *BitmexExchange) PrivateGetUserMargin() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/margin"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserMinWithdrawalFee method for https://www.bitmex.com/api/v1/user/minWithdrawalFee
func (c *BitmexExchange) PrivateGetUserMinWithdrawalFee() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/minWithdrawalFee"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserWallet method for https://www.bitmex.com/api/v1/user/wallet
func (c *BitmexExchange) PrivateGetUserWallet() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/wallet"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserWalletHistory method for https://www.bitmex.com/api/v1/user/walletHistory
func (c *BitmexExchange) PrivateGetUserWalletHistory() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/walletHistory"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateGetUserWalletSummary method for https://www.bitmex.com/api/v1/user/walletSummary
func (c *BitmexExchange) PrivateGetUserWalletSummary() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/walletSummary"
	if err = request("GET", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostApiKey method for https://www.bitmex.com/api/v1/apiKey
func (c *BitmexExchange) PrivatePostApiKey(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/apiKey"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostApiKeyDisable method for https://www.bitmex.com/api/v1/apiKey/disable
func (c *BitmexExchange) PrivatePostApiKeyDisable(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/apiKey/disable"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostApiKeyEnable method for https://www.bitmex.com/api/v1/apiKey/enable
func (c *BitmexExchange) PrivatePostApiKeyEnable(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/apiKey/enable"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostChat method for https://www.bitmex.com/api/v1/chat
func (c *BitmexExchange) PrivatePostChat(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/chat"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostOrder method for https://www.bitmex.com/api/v1/order
func (c *BitmexExchange) PrivatePostOrder(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostOrderBulk method for https://www.bitmex.com/api/v1/order/bulk
func (c *BitmexExchange) PrivatePostOrderBulk(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order/bulk"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostOrderCancelAllAfter method for https://www.bitmex.com/api/v1/order/cancelAllAfter
func (c *BitmexExchange) PrivatePostOrderCancelAllAfter(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order/cancelAllAfter"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostOrderClosePosition method for https://www.bitmex.com/api/v1/order/closePosition
func (c *BitmexExchange) PrivatePostOrderClosePosition(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order/closePosition"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostPositionIsolate method for https://www.bitmex.com/api/v1/position/isolate
func (c *BitmexExchange) PrivatePostPositionIsolate(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/position/isolate"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostPositionLeverage method for https://www.bitmex.com/api/v1/position/leverage
func (c *BitmexExchange) PrivatePostPositionLeverage(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/position/leverage"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostPositionRiskLimit method for https://www.bitmex.com/api/v1/position/riskLimit
func (c *BitmexExchange) PrivatePostPositionRiskLimit(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/position/riskLimit"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostPositionTransferMargin method for https://www.bitmex.com/api/v1/position/transferMargin
func (c *BitmexExchange) PrivatePostPositionTransferMargin(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/position/transferMargin"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserCancelWithdrawal method for https://www.bitmex.com/api/v1/user/cancelWithdrawal
func (c *BitmexExchange) PrivatePostUserCancelWithdrawal(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/cancelWithdrawal"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserConfirmEmail method for https://www.bitmex.com/api/v1/user/confirmEmail
func (c *BitmexExchange) PrivatePostUserConfirmEmail(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/confirmEmail"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserConfirmEnableTFA method for https://www.bitmex.com/api/v1/user/confirmEnableTFA
func (c *BitmexExchange) PrivatePostUserConfirmEnableTFA(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/confirmEnableTFA"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserConfirmWithdrawal method for https://www.bitmex.com/api/v1/user/confirmWithdrawal
func (c *BitmexExchange) PrivatePostUserConfirmWithdrawal(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/confirmWithdrawal"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserDisableTFA method for https://www.bitmex.com/api/v1/user/disableTFA
func (c *BitmexExchange) PrivatePostUserDisableTFA(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/disableTFA"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserLogout method for https://www.bitmex.com/api/v1/user/logout
func (c *BitmexExchange) PrivatePostUserLogout(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/logout"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserLogoutAll method for https://www.bitmex.com/api/v1/user/logoutAll
func (c *BitmexExchange) PrivatePostUserLogoutAll(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/logoutAll"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserPreferences method for https://www.bitmex.com/api/v1/user/preferences
func (c *BitmexExchange) PrivatePostUserPreferences(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/preferences"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserRequestEnableTFA method for https://www.bitmex.com/api/v1/user/requestEnableTFA
func (c *BitmexExchange) PrivatePostUserRequestEnableTFA(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/requestEnableTFA"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePostUserRequestWithdrawal method for https://www.bitmex.com/api/v1/user/requestWithdrawal
func (c *BitmexExchange) PrivatePostUserRequestWithdrawal(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user/requestWithdrawal"
	if err = request("POST", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePutOrder method for https://www.bitmex.com/api/v1/order
func (c *BitmexExchange) PrivatePutOrder(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order"
	if err = request("PUT", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePutOrderBulk method for https://www.bitmex.com/api/v1/order/bulk
func (c *BitmexExchange) PrivatePutOrderBulk(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order/bulk"
	if err = request("PUT", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivatePutUser method for https://www.bitmex.com/api/v1/user
func (c *BitmexExchange) PrivatePutUser(body bytes.Buffer) (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/user"
	if err = request("PUT", reqURL, &data, body); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateDeleteApiKey method for https://www.bitmex.com/api/v1/apiKey
func (c *BitmexExchange) PrivateDeleteApiKey() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/apiKey"
	if err = request("DELETE", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateDeleteOrder method for https://www.bitmex.com/api/v1/order
func (c *BitmexExchange) PrivateDeleteOrder() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order"
	if err = request("DELETE", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}

// PrivateDeleteOrderAll method for https://www.bitmex.com/api/v1/order/all
func (c *BitmexExchange) PrivateDeleteOrderAll() (data interface{}, err error) {
	reqURL := "https://www.bitmex.com/api/v1/order/all"
	if err = request("DELETE", reqURL, &data, bytes.Buffer{}); err != nil {
		return nil, err
	}
	return data, err
}
